def id = \x.x
def add = \m.\n.\f.\x.m f (n f x)
def succ = add 1
def mul = \m.\n.\f.\x.m (n f) x
def exp = \m.\n.n m
def square = \m.exp m 2
def pred = \n.\f.\x.n (\g.\h. h (g f)) (\u x) id
def sub = \m.\n.(n pred) m
def div = (\n.((\f.(\x.x x) (\x.f (x x))) (\c.\n.\m.\f.\x.(\d.(\n.n (\x.(\a.\b.b)) (\a.\b.a)) d ((\f.\x.x) f x) (f (c d m f x))) ((\m.\n.n (\n.\f.\x.n (\g.\h.h (g f)) (\u.x) (\u.u)) m) n m))) ((\n.\f.\x. f (n f x)) n))

opdef ^ 3 = exp
opdef * 4 = mul
opdef / 4 = div
opdef + 5 = add
opdef - 5 = sub
